"use strict";

var _Object$keys = require("@babel/runtime-corejs3/core-js/object/keys");

var _forEachInstanceProperty = require("@babel/runtime-corejs3/core-js/instance/for-each");

var _context;

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

var _exportNames = {
  routes: true,
  Router: true
};
exports.Router = exports.routes = void 0;

var _react = _interopRequireDefault(require("react"));

var _index = require("@redwoodjs/router/dist/index");

_forEachInstanceProperty(_context = _Object$keys(_index)).call(_context, function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;

  _Object$defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _index[key];
    }
  });
});

// We're bypassing the `main` field in `package.json` because we're
// replacing imports of `@redwoodjs/router` with this file, and not doing so
// would cause an infinite loop.
// See: ./packages/core/config/jest.config.web.js
const routes = {};
/**
 * This is used in place of the real router during tests.
 * It populates the `routes.<pagename>()` utility object.
 */

exports.routes = routes;

const Router = ({
  children
}) => {
  for (let route of _react.default.Children.toArray(children)) {
    const {
      name
    } = route.props;
    routes[name] = jest.fn(() => name);
  }

  return /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null);
};

exports.Router = Router;