import { graphql as originalGraphql, rest as originalRest } from 'msw';
import server from './mockServer';
export * from '@testing-library/react';
export { customRender as render } from './render';
export * from 'msw';
export { server };
export interface GraphQLMock {
    query(...args: Parameters<typeof originalGraphql['query']>): void;
    mutation(...args: Parameters<typeof originalGraphql['mutation']>): void;
}
export declare const graphql: GraphQLMock;
export interface RestMock {
    get(...args: Parameters<typeof originalRest['get']>): void;
    post(...args: Parameters<typeof originalRest['post']>): void;
    delete(...args: Parameters<typeof originalRest['delete']>): void;
    put(...args: Parameters<typeof originalRest['put']>): void;
    patch(...args: Parameters<typeof originalRest['patch']>): void;
    options(...args: Parameters<typeof originalRest['options']>): void;
}
export declare const rest: RestMock;
//# sourceMappingURL=index.d.ts.map