"use strict";

var _interopRequireWildcard = require("@babel/runtime-corejs3/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime-corejs3/helpers/interopRequireDefault");

var _Object$defineProperty = require("@babel/runtime-corejs3/core-js/object/define-property");

_Object$defineProperty(exports, "__esModule", {
  value: true
});

exports.resolvers = exports.schema = void 0;

var _graphqlTag = _interopRequireDefault(require("graphql-tag"));

var _graphqlIsoDate = require("graphql-iso-date");

var _graphqlTypeJson = _interopRequireWildcard(require("graphql-type-json"));

var _package = _interopRequireDefault(require("../../package.json"));

// @ts-ignore

/**
 * This adds scalar types for dealing with Date, Time, DateTime, and JSON.
 * This also adds a root Query type which is needed to start the GraphQL server on a fresh install.
 */
const schema = (0, _graphqlTag.default)`
  scalar Date
  scalar Time
  scalar DateTime
  scalar JSON
  scalar JSONObject

  type Redwood {
    version: String
    currentUser: JSON
  }

  type Query {
    redwood: Redwood
  }
`;
exports.schema = schema;
const resolvers = {
  Date: _graphqlIsoDate.GraphQLDate,
  Time: _graphqlIsoDate.GraphQLTime,
  DateTime: _graphqlIsoDate.GraphQLDateTime,
  JSON: _graphqlTypeJson.default,
  JSONObject: _graphqlTypeJson.GraphQLJSONObject,
  Query: {
    redwood: () => ({
      version: _package.default.version,
      currentUser: (_args, context) => {
        return context === null || context === void 0 ? void 0 : context.currentUser;
      }
    })
  }
};
exports.resolvers = resolvers;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tYWtlTWVyZ2VkU2NoZW1hL3Jvb3RTY2hlbWEudHMiXSwibmFtZXMiOlsic2NoZW1hIiwicmVzb2x2ZXJzIiwiRGF0ZSIsIkdyYXBoUUxEYXRlIiwiVGltZSIsIkdyYXBoUUxUaW1lIiwiRGF0ZVRpbWUiLCJHcmFwaFFMRGF0ZVRpbWUiLCJKU09OIiwiR3JhcGhRTEpTT04iLCJKU09OT2JqZWN0IiwiR3JhcGhRTEpTT05PYmplY3QiLCJRdWVyeSIsInJlZHdvb2QiLCJ2ZXJzaW9uIiwiYXBpUGFja2FnZUpzb24iLCJjdXJyZW50VXNlciIsIl9hcmdzIiwiY29udGV4dCJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFFQTs7QUFDQTs7QUFDQTs7QUFHQTs7QUFEQTs7QUFHQTs7OztBQUlPLE1BQU1BLE1BQU0sR0FBRyx3QkFBSTs7Ozs7Ozs7Ozs7Ozs7O0NBQW5COztBQWlCQSxNQUFNQyxTQUFTLEdBQUc7QUFDdkJDLEVBQUFBLElBQUksRUFBRUMsMkJBRGlCO0FBRXZCQyxFQUFBQSxJQUFJLEVBQUVDLDJCQUZpQjtBQUd2QkMsRUFBQUEsUUFBUSxFQUFFQywrQkFIYTtBQUl2QkMsRUFBQUEsSUFBSSxFQUFFQyx3QkFKaUI7QUFLdkJDLEVBQUFBLFVBQVUsRUFBRUMsa0NBTFc7QUFNdkJDLEVBQUFBLEtBQUssRUFBRTtBQUNMQyxJQUFBQSxPQUFPLEVBQUUsT0FBTztBQUNkQyxNQUFBQSxPQUFPLEVBQUVDLGlCQUFlRCxPQURWO0FBRWRFLE1BQUFBLFdBQVcsRUFBRSxDQUFDQyxLQUFELEVBQWFDLE9BQWIsS0FBa0M7QUFDN0MsZUFBT0EsT0FBUCxhQUFPQSxPQUFQLHVCQUFPQSxPQUFPLENBQUVGLFdBQWhCO0FBQ0Q7QUFKYSxLQUFQO0FBREo7QUFOZ0IsQ0FBbEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IENvbnRleHQgfSBmcm9tICdzcmMvZ2xvYmFsQ29udGV4dCdcblxuaW1wb3J0IGdxbCBmcm9tICdncmFwaHFsLXRhZydcbmltcG9ydCB7IEdyYXBoUUxEYXRlLCBHcmFwaFFMVGltZSwgR3JhcGhRTERhdGVUaW1lIH0gZnJvbSAnZ3JhcGhxbC1pc28tZGF0ZSdcbmltcG9ydCBHcmFwaFFMSlNPTiwgeyBHcmFwaFFMSlNPTk9iamVjdCB9IGZyb20gJ2dyYXBocWwtdHlwZS1qc29uJ1xuXG4vLyBAdHMtaWdub3JlXG5pbXBvcnQgYXBpUGFja2FnZUpzb24gZnJvbSAnc3JjLy4uL3BhY2thZ2UuanNvbidcblxuLyoqXG4gKiBUaGlzIGFkZHMgc2NhbGFyIHR5cGVzIGZvciBkZWFsaW5nIHdpdGggRGF0ZSwgVGltZSwgRGF0ZVRpbWUsIGFuZCBKU09OLlxuICogVGhpcyBhbHNvIGFkZHMgYSByb290IFF1ZXJ5IHR5cGUgd2hpY2ggaXMgbmVlZGVkIHRvIHN0YXJ0IHRoZSBHcmFwaFFMIHNlcnZlciBvbiBhIGZyZXNoIGluc3RhbGwuXG4gKi9cbmV4cG9ydCBjb25zdCBzY2hlbWEgPSBncWxgXG4gIHNjYWxhciBEYXRlXG4gIHNjYWxhciBUaW1lXG4gIHNjYWxhciBEYXRlVGltZVxuICBzY2FsYXIgSlNPTlxuICBzY2FsYXIgSlNPTk9iamVjdFxuXG4gIHR5cGUgUmVkd29vZCB7XG4gICAgdmVyc2lvbjogU3RyaW5nXG4gICAgY3VycmVudFVzZXI6IEpTT05cbiAgfVxuXG4gIHR5cGUgUXVlcnkge1xuICAgIHJlZHdvb2Q6IFJlZHdvb2RcbiAgfVxuYFxuXG5leHBvcnQgY29uc3QgcmVzb2x2ZXJzID0ge1xuICBEYXRlOiBHcmFwaFFMRGF0ZSxcbiAgVGltZTogR3JhcGhRTFRpbWUsXG4gIERhdGVUaW1lOiBHcmFwaFFMRGF0ZVRpbWUsXG4gIEpTT046IEdyYXBoUUxKU09OLFxuICBKU09OT2JqZWN0OiBHcmFwaFFMSlNPTk9iamVjdCxcbiAgUXVlcnk6IHtcbiAgICByZWR3b29kOiAoKSA9PiAoe1xuICAgICAgdmVyc2lvbjogYXBpUGFja2FnZUpzb24udmVyc2lvbixcbiAgICAgIGN1cnJlbnRVc2VyOiAoX2FyZ3M6IGFueSwgY29udGV4dDogQ29udGV4dCkgPT4ge1xuICAgICAgICByZXR1cm4gY29udGV4dD8uY3VycmVudFVzZXJcbiAgICAgIH1cbiAgICB9KSxcbiAgfSxcbn1cbiJdfQ==